module mux_4x1 (
    input wire D0, D1, D2, D3, // Data inputs
    input wire S1, S0,         // Select lines
    output wire Y              // Output
);
    assign Y = (~S1 & ~S0 & D0) |
               (~S1 & S0 & D1) |
               (S1 & ~S0 & D2) |
               (S1 & S0 & D3);
endmodule








testbench


module tb_mux_4x1;
    reg D0, D1, D2, D3, S1, S0;
    wire Y;
    
    mux_4x1 uut (.D0(D0), .D1(D1), .D2(D2), .D3(D3), .S1(S1), .S0(S0), .Y(Y));

    initial begin
        // Test all cases
        D0 = 0; D1 = 1; D2 = 0; D3 = 1;
        S1 = 0; S0 = 0; #10; // Y should be D0
        S1 = 0; S0 = 1; #10; // Y should be D1
        S1 = 1; S0 = 0; #10; // Y should be D2
        S1 = 1; S0 = 1; #10; // Y should be D3
        $stop;
    end
endmodule